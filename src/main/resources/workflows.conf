# Definition of a workflow

# Include the steps for a static configuration of the workflow; we are planning
# to allow the dynamic inclusion of steps in a further iteration
#
include "steps.conf"

# The "global" configuration would be applied if the steps chooses not to
# override. E.g. idle.timeout is the maximum time it would wait idling before
# stopping.
#
jobgraph.global {
  idle.timeout = 5 seconds
  active.timeout = 3600 seconds
  stop.timeout = 60 seconds
}

# The workflow id 0 tests the following 
# job 1: Tests the Apache Beam job in Java and launched from a Mesos cluster
#        and if Mesos is not available (before dispatch), it will attempt to
#        launch from the host where the JobEngine is on.
# job 2: Tests the Apache Beam job in Java but launched from the colocated host
#        as the JobEngine
# job 3: Tests the Apache Beam job in Java but launched from a Mesos cluster
#        and if Mesos is not available (before dispatch), it will attempt to
#        launch from the host where the JobEngine is on.
# job 4: Tests the DFP job in JAva but launched from a Mesos cluster
#
workflows : [

  {
    id : 0
    name : "A sample process"
    description : "Reads from file, processed them and finally read them"
    steps : [1,2,3,4]
    jobgraph : [
      "1 -> 2",
      "1 -> 3",
      "2 -> 4"
    ]
  }

]
