# The inclusion of the configuration files is necessary to expose the
# namespaces to the library for capture and decode. Note: Make sure the
# namespace keys are unique otherwise you might end up running around the
# mountain looking for bugs !
#
include "steps.conf"
include "steps-another.conf"
include "workflows.conf"
include "persistence.conf"

# Tell Jobgraph where Mesos master node(s) is so that we can hook to it.
# When enabled is "true", jobgraph will attempt to submit to the Mesos cluster
# and run the Google Dataflow runner; but if enabled is "false", then jobgraph
# will still run the Google Dataflow runner but only on the co-located host as
# jobgraph.
#
# note: MESOS_CONTACT_POINT=127.0.0.1:5050,10.148.0.2:5050 should work
#
mesos {
  enabled  : true
  runas    : hicoden
  timeout  : 10 # Note: this cannot be less than 5 seconds
  uris : ["10.148.0.4:5050", "10.148.0.7:5050"]
  uris : ${?MESOS_CONTACT_POINTS}
}

# Dispatcher settings for the engine
#
dataflow-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 16
  }
  throughput = 1
}

# Location of the JobGraph engine and HTTP port
# note: internal IP.
#
jobgraph {
  hostname : 10.148.0.2
  hostname : ${?JOBGRAPH_HOST}
  hostport : 9000
  hostport : ${?JOBGRAPH_PORT}
}

# Http settings
akka.http.server.server-header = jobgraph/1.0
akka.http.server.default-http-port = 9000

